<?php

namespace AddressBookBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;


/**
 * Person
 *
 * @ORM\Table()
 * @ORM\Entity
 */
class Person
{
    /**
     * @ORM\ManyToMany(targetEntity="Squad", mappedBy="persons")
     * @ORM\JoinTable(name="person_squad")
     */
    private $squads;


    /**
     * @ORM\OneToMany(targetEntity="Email", mappedBy="personId")
     */

    private $emails;

    /**
     * @ORM\OneToMany(targetEntity="Address", mappedBy="personId")
     */

    private $addresses;

    /**
     * @ORM\OneToMany(targetEntity="Phone", mappedBy="personId")
     */

    private $phones;

    /**
     * @ORM\ManyToOne(targetEntity="User", inversedBy="persons")
     * @ORM\JoinColumn(name="user_id", referencedColumnName="id")
     */
    private $user;

    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="name", type="string", length=100)
     * @Assert\NotBlank(
     *     message = "Imię nie może być puste"
     * )
     */
    private $name;

    /**
     * @var string
     *
     * @ORM\Column(name="surname", type="string", length=100)
     * @Assert\NotBlank(
     *     message = "Nazwisko nie może być puste"
     * )
     */
    private $surname;

    /**
     * @var string
     *
     * @ORM\Column(name="description", type="text", nullable=true)
     */
    private $description;

    /**
     * @var string
     *
     * @ORM\Column(name="photo", type="string", length=255, nullable=true)
     * @Assert\File(
     *     maxSize = "1M",
     *     mimeTypes = {"image/jpeg", "image/jpg", "image/png"},
     *     maxSizeMessage = "File is too big",
     *     mimeTypesMessage = "Only the filetypes image are allowed"
     * )
     */
    private $photo;


    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set name
     *
     * @param string $name
     * @return Person
     */
    public function setName($name)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Get name
     *
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Set surname
     *
     * @param string $surname
     * @return Person
     */
    public function setSurname($surname)
    {
        $this->surname = $surname;

        return $this;
    }

    /**
     * Get surname
     *
     * @return string
     */
    public function getSurname()
    {
        return $this->surname;
    }

    /**
     * Set description
     *
     * @param string $description
     * @return Person
     */
    public function setDescription($description)
    {
        $this->description = $description;

        return $this;
    }

    /**
     * Get description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Set photo
     *
     * @param string $photo
     * @return Person
     */
    public function setPhoto($photo)
    {
        $this->photo = $photo;

        return $this;
    }

    /**
     * Get photo
     *
     * @return string
     */
    public function getPhoto()
    {
        return $this->photo;
    }

    public function __construct()
    {
        $this->reviews = new \Doctrine\Common\Collections\ArrayCollection();
    }


    /**
     * Add squads
     *
     * @param \AddressBookBundle\Entity\Squad $squads
     * @return Person
     */
    public function addSquads(\AddressBookBundle\Entity\Squad $squads)
    {
        $this->squads[] = $squads;

        return $this;
    }

    /**
     * Remove squads
     *
     * @param \AddressBookBundle\Entity\Squad $squads
     */
    public function removeSquads(\AddressBookBundle\Entity\Squad $squads)
    {
        $this->squads->removeElement($squads);
    }

    /**
     * Get squads
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getSquads()
    {
        return $this->squads;
    }

    /**
     * Add emails
     *
     * @param \AddressBookBundle\Entity\Email $emails
     * @return Person
     */
    public function addEmail(\AddressBookBundle\Entity\Email $emails)
    {
        $this->emails[] = $emails;

        return $this;
    }

    /**
     * Remove emails
     *
     * @param \AddressBookBundle\Entity\Email $emails
     */
    public function removeEmail(\AddressBookBundle\Entity\Email $emails)
    {
        $this->emails->removeElement($emails);
    }

    /**
     * Get emails
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getEmails()
    {
        return $this->emails;
    }

    /**
     * Add addresses
     *
     * @param \AddressBookBundle\Entity\Address $addresses
     * @return Person
     */
    public function addAddress(\AddressBookBundle\Entity\Address $addresses)
    {
        $this->addresses[] = $addresses;

        return $this;
    }

    /**
     * Remove addresses
     *
     * @param \AddressBookBundle\Entity\Address $addresses
     */
    public function removeAddress(\AddressBookBundle\Entity\Address $addresses)
    {
        $this->addresses->removeElement($addresses);
    }

    /**
     * Get addresses
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getAddresses()
    {
        return $this->addresses;
    }

    /**
     * Add phones
     *
     * @param \AddressBookBundle\Entity\Phone $phones
     * @return Person
     */
    public function addPhone(\AddressBookBundle\Entity\Phone $phones)
    {
        $this->phones[] = $phones;

        return $this;
    }

    /**
     * Remove phones
     *
     * @param \AddressBookBundle\Entity\Phone $phones
     */
    public function removePhone(\AddressBookBundle\Entity\Phone $phones)
    {
        $this->phones->removeElement($phones);
    }

    /**
     * Get phones
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getPhones()
    {
        return $this->phones;
    }


    /**
     * Add squads
     *
     * @param \AddressBookBundle\Entity\Squad $squads
     * @return Person
     */
    public function addSquad(\AddressBookBundle\Entity\Squad $squads)
    {
        $this->squads[] = $squads;

        return $this;
    }

    /**
     * Remove squads
     *
     * @param \AddressBookBundle\Entity\Squad $squads
     */
    public function removeSquad(\AddressBookBundle\Entity\Squad $squads)
    {
        $this->squads->removeElement($squads);
    }
}
